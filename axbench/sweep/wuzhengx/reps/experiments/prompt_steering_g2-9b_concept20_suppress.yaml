generate:
  lm_model: "gpt-4o-mini"
  output_length: 128
  num_of_examples: 144
  max_concepts: 500
  master_data_dir: "axbench/data"
  dataset_category: "instruction"
  lm_use_cache: false
  seed: 42
  keep_orig_axbench_format: true
  steer_data_type: "rule" ### use cmd to define ###
  # concept_path: "axbench/data/gemma-2-9b_20-gemmascope-res-16k.json"
train:
  component: "res"
  seed: 42
  use_bf16: true
  models:
    DiffMean:
      batch_size: 6
      n_epochs: 1
      binarize_dataset: true
      low_rank_dimension: 1
  output_length: 768 # use_cmd_to_define 
  model_name: "google/gemma-2-9b-it"
  steer_data_type: "rule"
inference:
  use_bf16: true
  models: ["PromptSteering"]
  # latent related params
  output_length: 768
  latent_num_of_examples: 36
  latent_batch_size: 16
  # steering related params
  steering_intervention_type: "addition" # clamping
  steering_datasets: ["AlpacaEvalSuppress"]
  steering_batch_size: 10
  steering_output_length: 768
  steering_num_of_examples: 10 # number of examples per concept and per factor
  steering_factors: [1.0] # number of steering factors per example
  # master data dir is shared across all jobs.
  master_data_dir: "axbench/data"
  seed: 42
  lm_model: "gpt-4o-mini"
  # generation related params
  temperature: 1.0
  ### use cmd to define ###
  steering_model_name: "google/gemma-2-9b-it"
  model_name: "google/gemma-2-9b-it"
  defense: ["prepend_original"]
  steer_data_type: "rule"
  # steering_layer: 20
  # latent_layer: 20
evaluate:
  models: ["PromptSteering"]
  latent_evaluators: [
    "AUCROCEvaluator",
    "HardNegativeEvaluator",
  ]
  steering_evaluators: [
    # "PerplexityEvaluator", 
    "LMJudgeEvaluator",
    "RuleEvaluator"
  ]
  winrate_split_ratio: 0.5 # this is for steering only, we use a separate partition for factor selection.
  # Number of processes to run in parallel for steering evaluation.
  num_of_workers: 32
  lm_model: "gpt-4o-mini"
  run_winrate: false
  winrate_baseline: "PromptSteering"
  # master data dir is shared across all jobs.
  master_data_dir: "axbench/data"
  steer_dataset_type: "rule"
  defense: ["prepend_original"]

